Page({

  /**
   * 页面的初始数据
   */
  data: {
    dataString:`
1.书的价格是如何确定的？
书籍价格会根据库存和市场情况动态调整，扫码后可获得该本书当前的预估收购价。
2.什么书口袋收书不收？ 
缺页、封面受损、发霉、泡水、老化泛黄泛白、乱涂乱画、附件缺失、盗版、非卖品、非法出版物等影响使用的书籍。
3.书籍的品质会影响收购价吗？
平台在收到书时会进行品质审核，这一步会把书籍分为合格和不合格，合格的收购价为扫码界面上显示的价格，不合格的会在个人中心订单详情中显示不收。
3.如何卖书给口袋收书收书？ 
扫描书本背面的ISBN码或手动输入书本的ISBN码，扫码书籍达到
收购数量30本及以上后，提交卖书订单。
4.不经过扫码下单，可以直接卖书给口袋收书吗？
强烈建议用户把想卖的书扫码下单后再寄出，如果把没有扫码的书直接寄出，平台不一定会收这本书，并且也不能保证可以取回，所以请尽量走扫码流程卖书给平台。
5.我要如何收到卖书的钱？
工作人员审核通过后，我们会在1-3天内完成书籍打款（毕业季爆仓会稍有延迟）。审核后，除去未收到的书以及审核不合格的书，其余书费将到你的口袋收书账户，可以随时提现到微信零钱包。节假日期间，审核时间可能会延长，具体延时以审核通过为准。
6.卖书的物流费用谁承担？
卖书运费全部由平台承担，平台会安排工作人员到学校取件，并提供打包材料。
7.为什么我卖书的实际收入可能与预计收入有差别？
平台会在收到之后进行人工审核，包括确定书的原价，品质是否合格，是否有多寄、少寄、错寄等情况，以上均可能影响实际收入。
8.我的卖书订单可否取消？已经审核通过的是否可以领回？ 
在工作人员（快递员）上门取货前，可以取消。已经在运送途中的卖书订单，不能取消。审核通过的籍，不能申请领回。
9.审核后被拒绝的书如何处理？
寄书之前请务必仔细检查书本的品质。审核不合格的书籍不会再上架销售，请在72h内联系客服申请退回。不想取回或者72h内未申请取回的，平台将统一处理。退书地址默认为下单地址。退书的费用需用户自行支付，根据书籍重量和快递行业实际资费收取。
10.品相审核分级细则
豆芽在收到书后，会进行品质核实，这一步会把书本分为全新，品相良好，品相中等，品相不合格，其中品相中等的收购价比全
新和品相良好低40%-60%, 品相不合格的会保留72小时，逾时平台将自行处理。如果用户要领回品相不合格的书籍，需自行付费领回。平台默认通过德邦和顺丰邮寄，费用根据书籍重量和快递行业实际资费收取，详情请咨询客服。
全新：在平台收到书时是全新且未拆封的。
品相良好：有不明显的使用痕迹或瑕疵，无笔记，无折痕，无塑封。
品相中等：有明显的使用痕迹，笔记少，有折痕划线，没有泡水发霉缺页，是正版等，但不影响阅读和二次销售。
品相不合格：书籍的品质瑕疵已经影响到下一位用户购买之后的使用和阅读体验，且无法修复，书籍将按照不合格的要求进行处理。审核不合格的书籍不会上架销售，平台会保留72小时，逾时平台将自行处理。如果用户要领回品相不合格的书籍，需自行付费领回。费用根据书籍重量和快递行业实际资费收取，详情请咨询客服。
其他不合格原因：缺页、封面受损、发霉、泡水、老化泛黄泛白、乱涂乱画、盗版、非卖品、附件缺失、非法出版物等影响使用的图书
`,
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {
    
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {
    
  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {
    
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
    
  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {
    
  }
})